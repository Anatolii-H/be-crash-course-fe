/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/health": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/api/admin/tags/": {
    post: {
      requestBody: {
        content: {
          "application/json": {
            name: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": {
              /** Format: uuid */
              id: string;
              name: string;
              /** Format: date-time */
              createdAt: string;
              /** Format: date-time */
              updatedAt: string;
            };
          };
        };
      };
    };
  };
  "/api/admin/tags/{tagId}/": {
    delete: {
      parameters: {
        path: {
          tagId: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    patch: {
      parameters: {
        path: {
          tagId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            name: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** Format: uuid */
              id: string;
              name: string;
              /** Format: date-time */
              createdAt: string;
              /** Format: date-time */
              updatedAt: string;
            };
          };
        };
      };
    };
  };
  "/api/admin/users/": {
    get: {
      parameters: {
        query?: {
          page?: number;
          pageSize?: number;
          search?: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              data: ({
                  /** Format: uuid */
                  id: string;
                  sub: string;
                  firstName: string;
                  lastName: string;
                  /** Format: email */
                  email: string;
                  /** Format: date-time */
                  createdAt: string;
                  /** Format: date-time */
                  updatedAt: string;
                  /** @enum {string} */
                  role: "admin" | "user";
                  isPending: boolean;
                  isDisabled: boolean;
                })[];
              meta: {
                totalCount: number;
                totalPages: number;
                page: number;
                pageSize: number;
              };
            };
          };
        };
      };
    };
  };
  "/api/admin/users/{userId}/disable/": {
    post: {
      parameters: {
        path: {
          userId: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": boolean;
          };
        };
      };
    };
  };
  "/api/admin/users/{userId}/enable/": {
    post: {
      parameters: {
        path: {
          userId: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": boolean;
          };
        };
      };
    };
  };
  "/api/admin/users/{userId}/resend-invite/": {
    post: {
      parameters: {
        path: {
          userId: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/api/admin/users/invite/": {
    post: {
      requestBody: {
        content: {
          "application/json": {
            /** Format: email */
            email: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/api/auth/accept-invite/": {
    post: {
      requestBody: {
        content: {
          "application/json": {
            firstName: string;
            lastName: string;
            /** Format: email */
            email: string;
            password: string;
            expireAt: number;
            signature: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
  };
  "/api/auth/signup/": {
    post: {
      requestBody: {
        content: {
          "application/json": {
            firstName: string;
            lastName: string;
            /** Format: email */
            email: string;
            password: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": {
              firstName: string;
              lastName: string;
              /** Format: email */
              email: string;
              sub: string;
            };
          };
        };
      };
    };
  };
  "/api/posts/": {
    get: {
      parameters: {
        query?: {
          page?: number;
          pageSize?: number;
          cursorCreatedAt?: string;
          cursorId?: string;
          search?: string;
          sortBy?: "title" | "createdAt" | "commentsCount";
          sortOrder?: "asc" | "desc";
          minCommentsCount?: number;
          tagIds?: string[];
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              data: ({
                  /** Format: uuid */
                  id: string;
                  title: string;
                  description: string;
                  /** Format: date-time */
                  createdAt: string;
                  /** Format: date-time */
                  updatedAt: string;
                  /** Format: uuid */
                  authorId: string | null;
                  commentsCount: number;
                  tags: {
                      /** Format: uuid */
                      id: string;
                      name: string;
                      /** Format: date-time */
                      createdAt: string;
                      /** Format: date-time */
                      updatedAt: string;
                    }[];
                })[];
              meta: {
                totalCount: number;
                totalPages: number;
                page: number;
                pageSize: number;
              };
            };
          };
        };
      };
    };
    post: {
      requestBody: {
        content: {
          "application/json": {
            title: string;
            description?: string;
            tagIds: string[];
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": {
              /** Format: uuid */
              id: string;
              title: string;
              description: string;
              /** Format: date-time */
              createdAt: string;
              /** Format: date-time */
              updatedAt: string;
              /** Format: uuid */
              authorId: string | null;
            };
          };
        };
      };
    };
  };
  "/api/posts/{postId}/": {
    get: {
      parameters: {
        path: {
          postId: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** Format: uuid */
              id: string;
              title: string;
              description: string;
              /** Format: date-time */
              createdAt: string;
              /** Format: date-time */
              updatedAt: string;
              author: {
                /** Format: uuid */
                id: string;
                sub: string;
                firstName: string;
                lastName: string;
                /** Format: email */
                email: string;
                /** Format: date-time */
                createdAt: string;
                /** Format: date-time */
                updatedAt: string;
                /** @enum {string} */
                role: "admin" | "user";
                isPending: boolean;
                isDisabled: boolean;
              };
              comments: ({
                  /** Format: uuid */
                  id: string;
                  text: string;
                  /** Format: date-time */
                  createdAt: string;
                  /** Format: date-time */
                  updatedAt: string;
                  author: {
                    /** Format: uuid */
                    id: string;
                    sub: string;
                    firstName: string;
                    lastName: string;
                    /** Format: email */
                    email: string;
                    /** Format: date-time */
                    createdAt: string;
                    /** Format: date-time */
                    updatedAt: string;
                    /** @enum {string} */
                    role: "admin" | "user";
                    isPending: boolean;
                    isDisabled: boolean;
                  };
                })[];
              tags: {
                  /** Format: uuid */
                  id: string;
                  name: string;
                  /** Format: date-time */
                  createdAt: string;
                  /** Format: date-time */
                  updatedAt: string;
                }[];
            };
          };
        };
      };
    };
    delete: {
      parameters: {
        path: {
          postId: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    patch: {
      parameters: {
        path: {
          postId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            title: string;
            description?: string;
            tagIds: string[];
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** Format: uuid */
              id: string;
              title: string;
              description: string;
              /** Format: date-time */
              createdAt: string;
              /** Format: date-time */
              updatedAt: string;
              /** Format: uuid */
              authorId: string | null;
            };
          };
        };
      };
    };
  };
  "/api/posts/{postId}/comments/": {
    get: {
      parameters: {
        path: {
          postId: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": ({
                /** Format: uuid */
                id: string;
                text: string;
                /** Format: date-time */
                createdAt: string;
                /** Format: date-time */
                updatedAt: string;
                /** Format: uuid */
                authorId: string | null;
              })[];
          };
        };
      };
    };
    post: {
      parameters: {
        path: {
          postId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            text: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        201: {
          content: {
            "application/json": {
              /** Format: uuid */
              id: string;
              text: string;
              /** Format: date-time */
              createdAt: string;
              /** Format: date-time */
              updatedAt: string;
              /** Format: uuid */
              authorId: string | null;
            };
          };
        };
      };
    };
  };
  "/api/posts/{postId}/comments/{commentId}/": {
    delete: {
      parameters: {
        path: {
          commentId: string;
          postId: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: never;
        };
      };
    };
    patch: {
      parameters: {
        path: {
          commentId: string;
          postId: string;
        };
      };
      requestBody: {
        content: {
          "application/json": {
            text: string;
          };
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** Format: uuid */
              id: string;
              text: string;
              /** Format: date-time */
              createdAt: string;
              /** Format: date-time */
              updatedAt: string;
              /** Format: uuid */
              authorId: string | null;
            };
          };
        };
      };
    };
  };
  "/api/tags/": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
                /** Format: uuid */
                id: string;
                name: string;
                /** Format: date-time */
                createdAt: string;
                /** Format: date-time */
                updatedAt: string;
              }[];
          };
        };
      };
    };
  };
  "/api/tags/{tagId}/": {
    get: {
      parameters: {
        path: {
          tagId: string;
        };
      };
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** Format: uuid */
              id: string;
              name: string;
              /** Format: date-time */
              createdAt: string;
              /** Format: date-time */
              updatedAt: string;
            };
          };
        };
      };
    };
  };
  "/api/user/": {
    get: {
      responses: {
        /** @description Default Response */
        200: {
          content: {
            "application/json": {
              /** Format: uuid */
              id: string;
              sub: string;
              firstName: string;
              lastName: string;
              /** Format: email */
              email: string;
              /** Format: date-time */
              createdAt: string;
              /** Format: date-time */
              updatedAt: string;
              /** @enum {string} */
              role: "admin" | "user";
              isPending: boolean;
              isDisabled: boolean;
            };
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /**
     * @description - GENERAL_ERROR -> 1000
     * @enum {integer}
     */
    ErrorCodes: 1000;
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
